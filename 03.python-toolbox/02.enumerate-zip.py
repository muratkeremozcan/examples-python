# Create a list of strings: mutants
mutants = ['charles xavier', 
            'bobby drake', 
            'kurt wagner', 
            'max eisenhardt', 
            'kitty pryde']


# Printing enumerate() directly just gives a weird iterator object, NOT the values.
print(enumerate(mutants))  
# Wrapping it in list() actually forces the iterator to show the values.
print(list(enumerate(mutants)))

# Create a list of tuples from mutants and assign the result to mutant_list.
# Make sure you generate the tuples using enumerate() and turn the result from it into a list using list().
mutant_list = list(enumerate(mutants))

print(mutant_list)

# Complete the first for loop by unpacking the tuples generated by calling enumerate() on mutants. 
# Use index1 for the index and value1 for the value when unpacking the tuple.
for index, value in list(enumerate(mutants)):
    print(index, value)

# Complete the second for loop similarly as with the first, but this time 
# change the starting index to start from 1 by passing it in as an argument 
# to the start parameter of enumerate(). 
# Use index2 for the index and value2 for the value when unpacking the tuple.
for index, value in list(enumerate(mutants, start = 1)):
    print(index, value)


####################

aliases = ['prof x', 'iceman', 'nightcrawler', 'magneto', 'shadowcat']
powers = ['telepathy', 'thermokinesis', 'teleportation', 'magnetokinesis', 'intangibility']

# Using zip() with list(), create a list of tuples from the three lists mutants, aliases, and powers (in that order) 
# and assign the result to mutant_data.
mutant_data = list(zip(mutants, aliases, powers))
print(mutant_data)

# Using zip(), create a zip object called mutant_zip from the three lists mutants, aliases, and powers.
mutant_zip = zip(mutants, aliases, powers)
print(mutant_zip)

# Complete the for loop by unpacking the zip object you created and printing the tuple values. 
# Use value1, value2, value3 for the values from each of mutants, aliases, and powers, in that order.
for value1, value2, value3 in mutant_zip:
  print(value1, value2, value3)


###############
# Create a zip object from mutants and powers: z1
z1 = zip(mutants, powers)

z1 
# Print the tuples in z1 by unpacking them into positional arguments using the * operator in a print() call.
# unzip
print(*z1)

# *zip operator vs list(zip):
print(*zip(mutants,powers))
print(list(zip(mutants, powers)))

# Because the previous print() call would have exhausted the elements in z1, recreate the zip object
z1 = zip(mutants,powers)

# 'Unzip' the tuples in z1 by unpacking with * and zip(): result1, result2
result1, result2 = zip(*z1)
print(result1)
print(result2)

# Check if unpacked tuples are equivalent to original tuples
print(result1 == mutants)
print(result2 == powers)